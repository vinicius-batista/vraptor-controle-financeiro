# =======================
# Shiro INI configuration
# =======================

[main]
# Objetos e suas propriedades sao definidos aqui, como o SecurityManager, Realms
# e qualquer coisa necessaria para construir o SecurityManager
hashService = org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashIterations = 750000
hashService.hashAlgorithmName = SHA-512
# privateSalt precisa ser codificado em base64 no arquivo shiro.ini mas nao no 
# codigo Java
# hahahaha em base64 = aGFoYWhhaGE=
hashService.privateSalt = aGFoYWhhaGE=
hashService.generatePublicSalt = true
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService = $hashService
passwordMatcher.passwordService = $passwordService
# milisegundos (1800000 == 30 minutos)
# securityManager.sessionManager.globalSessionTimeout = 1800000000000

# Configuracao do acesso a BD usando um pool de conexoes
ds = org.apache.shiro.jndi.JndiObjectFactory
ds.resourceName = java:comp/env/jdbc/controle-financeiro
ds.requiredType = javax.sql.DataSource
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $ds
jdbcRealm.permissionsLookupEnabled = false
jdbcRealm.authenticationQuery = SELECT senha FROM usuarios WHERE email = ?
jdbcRealm.userRolesQuery = select role from usuarios where email = ?
jdbcRealm.credentialsMatcher = $passwordMatcher

[urls]
/auth/logout = logout
